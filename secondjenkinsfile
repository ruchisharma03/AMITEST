String cron_string = "0 0 */20 * *" // cron every 20th of the month
def status = ''
pipeline {
  agent none
  triggers {
    cron(cron_string)
  }
  parameters {

    string(name: 'JIRA_TICKET_NUMBER', description: 'Jira Ticket Number')
    string(name: 'FIELD_PATH', description: 'Field on the Jira Issue to Watch')
    string(name: 'FIELD_TARGET_VALUE', description: 'Field target value when trigger the job')
  }

  stages {
    stage('check the jira field status') {
      agent {label 'java/1.8-docker-ecr && environment/qa && account/bv-nexus-qa'}
      steps {
       withCredentials([[
            $class: 'UsernamePasswordMultiBinding',
            credentialsId: "jira-cred",
            usernameVariable: 'JIRA_USERNAME',
            passwordVariable: 'JIRA_API_TOKEN',
        ]]) {
           
          sh 'pip3 install -r requirements.txt'
           
          script {
            
            status = sh(returnStdout: true, script: 'python3 jira_scripts/check_status_field.py')
            status = status.replaceAll("[\n\r]", "");
            println(status);
          
          }
        }
      }
    }
  // create the jobs dynamically
  stage('build the UAT and prod jobs') {

    steps {

      script {
          println(params.FIELD_TARGET_VALUE)
          println(status)
          if(status.equals(params.FIELD_TARGET_VALUE)){

              echo "hello building...."

          }
        }
      }
    }
  }
   
  post {
    always {
      echo "====++++always++++===="
    }
    success {
      echo "====++++only when successful ++++===="
    }
    failure {
      echo "====++++only when failed++++===="
    }
  }
}
